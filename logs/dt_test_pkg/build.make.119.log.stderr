In file included from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/digital_twin.cpp:3[m[K:
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:40:5:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KJ[m[Kâ€™ does not name a type
     [01;31m[KJ[m[K = (Vector3f(1,1,1)).asDiagonal();
     [01;31m[K^[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:41:4:[m[K [01;31m[Kerror: [m[Kexpected identifier before numeric constant
  J([01;31m[K0[m[K, 1) = J(1, 0) = 1.0f;
    [01;31m[K^[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:41:4:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K,[m[Kâ€™ or â€˜[01m[K...[m[Kâ€™ before numeric constant
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:41:13:[m[K [01;31m[Kerror: [m[Kinvalid pure specifier (only â€˜[01m[K= 0[m[Kâ€™ is allowed) before â€˜[01m[K([m[Kâ€™ token
  J(0, 1) = J[01;31m[K([m[K1, 0) = 1.0f;
             [01;31m[K^[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:41:22:[m[K [01;31m[Kerror: [m[KISO C++ forbids declaration of â€˜[01m[KJ[m[Kâ€™ with no type [[01;31m[K-fpermissive[m[K]
  J(0, 1) = J(1, 0) = [01;31m[K1.0f[m[K;
                      [01;31m[K^~~~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:41:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kint QuadDynamicModel::J(int)[m[Kâ€™ conflicts with a previous declaration
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:39:36:[m[K [01;36m[Knote: [m[Kprevious declaration â€˜[01m[KEigen::DiagonalMatrix<float, -1> QuadDynamicModel::J[m[Kâ€™
     DiagonalMatrix<float, Dynamic> [01;36m[KJ[m[K;
                                    [01;36m[K^[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:42:4:[m[K [01;31m[Kerror: [m[Kexpected identifier before numeric constant
  J([01;31m[K0[m[K, 2) = J(2, 0) = 1.0f;
    [01;31m[K^[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:42:4:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K,[m[Kâ€™ or â€˜[01m[K...[m[Kâ€™ before numeric constant
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:42:13:[m[K [01;31m[Kerror: [m[Kinvalid pure specifier (only â€˜[01m[K= 0[m[Kâ€™ is allowed) before â€˜[01m[K([m[Kâ€™ token
  J(0, 2) = J[01;31m[K([m[K2, 0) = 1.0f;
             [01;31m[K^[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:42:22:[m[K [01;31m[Kerror: [m[KISO C++ forbids declaration of â€˜[01m[KJ[m[Kâ€™ with no type [[01;31m[K-fpermissive[m[K]
  J(0, 2) = J(2, 0) = [01;31m[K1.0f[m[K;
                      [01;31m[K^~~~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:42:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kint QuadDynamicModel::J(int)[m[Kâ€™ conflicts with a previous declaration
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:39:36:[m[K [01;36m[Knote: [m[Kprevious declaration â€˜[01m[KEigen::DiagonalMatrix<float, -1> QuadDynamicModel::J[m[Kâ€™
     DiagonalMatrix<float, Dynamic> [01;36m[KJ[m[K;
                                    [01;36m[K^[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:43:4:[m[K [01;31m[Kerror: [m[Kexpected identifier before numeric constant
  J([01;31m[K1[m[K, 2) = J(2, 1) = 1.0f;// inertia matrix
    [01;31m[K^[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:43:4:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K,[m[Kâ€™ or â€˜[01m[K...[m[Kâ€™ before numeric constant
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:43:13:[m[K [01;31m[Kerror: [m[Kinvalid pure specifier (only â€˜[01m[K= 0[m[Kâ€™ is allowed) before â€˜[01m[K([m[Kâ€™ token
  J(1, 2) = J[01;31m[K([m[K2, 1) = 1.0f;// inertia matrix
             [01;31m[K^[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:43:22:[m[K [01;31m[Kerror: [m[KISO C++ forbids declaration of â€˜[01m[KJ[m[Kâ€™ with no type [[01;31m[K-fpermissive[m[K]
  J(1, 2) = J(2, 1) = [01;31m[K1.0f[m[K;// inertia matrix
                      [01;31m[K^~~~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:43:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kint QuadDynamicModel::J(int)[m[Kâ€™ conflicts with a previous declaration
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:39:36:[m[K [01;36m[Knote: [m[Kprevious declaration â€˜[01m[KEigen::DiagonalMatrix<float, -1> QuadDynamicModel::J[m[Kâ€™
     DiagonalMatrix<float, Dynamic> [01;36m[KJ[m[K;
                                    [01;36m[K^[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:49:46:[m[K [01;31m[Kerror: [m[Kredeclaration of â€˜[01m[KEigen::Vector3f QuadDynamicModel::r [1][m[Kâ€™
     Vector3f r[1] = Vector3f(0.0f, 0.0f, 0.0f[01;31m[K)[m[K;
                                              [01;31m[K^[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:48:46:[m[K [01;36m[Knote: [m[Kprevious declaration â€˜[01m[KEigen::Vector3f QuadDynamicModel::r [0][m[Kâ€™
     Vector3f r[0] = Vector3f(0.0f, 0.0f, 0.0f[01;36m[K)[m[K;// _TODO_
                                              [01;36m[K^[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:50:46:[m[K [01;31m[Kerror: [m[Kredeclaration of â€˜[01m[KEigen::Vector3f QuadDynamicModel::r [2][m[Kâ€™
     Vector3f r[2] = Vector3f(0.0f, 0.0f, 0.0f[01;31m[K)[m[K;
                                              [01;31m[K^[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:48:46:[m[K [01;36m[Knote: [m[Kprevious declaration â€˜[01m[KEigen::Vector3f QuadDynamicModel::r [0][m[Kâ€™
     Vector3f r[0] = Vector3f(0.0f, 0.0f, 0.0f[01;36m[K)[m[K;// _TODO_
                                              [01;36m[K^[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:51:46:[m[K [01;31m[Kerror: [m[Kredeclaration of â€˜[01m[KEigen::Vector3f QuadDynamicModel::r [3][m[Kâ€™
     Vector3f r[3] = Vector3f(0.0f, 0.0f, 0.0f[01;31m[K)[m[K;
                                              [01;31m[K^[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:48:46:[m[K [01;36m[Knote: [m[Kprevious declaration â€˜[01m[KEigen::Vector3f QuadDynamicModel::r [0][m[Kâ€™
     Vector3f r[0] = Vector3f(0.0f, 0.0f, 0.0f[01;36m[K)[m[K;// _TODO_
                                              [01;36m[K^[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:58:29:[m[K [01;31m[Kerror: [m[Kredeclaration of â€˜[01m[Kfloat QuadDynamicModel::_q[m[Kâ€™
     float _p =0.0f, _q =0.0f[01;31m[K,[m[K _r = 0.0f;
                             [01;31m[K^[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:57:49:[m[K [01;36m[Knote: [m[Kprevious declaration â€˜[01m[KEigen::Vector3f QuadDynamicModel::_q[m[Kâ€™
  Vector3f _q = Quaternion(1.0f, 0.0f, 0.0f, 0.0f[01;36m[K)[m[K;  // quaternion
                                                 [01;36m[K^[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:61:35:[m[K [01;31m[Kerror: [m[Kredeclaration of â€˜[01m[Kfloat QuadDynamicModel::_u [1][m[Kâ€™
     float _u[0] =0.0f, _u[1] =0.0f[01;31m[K,[m[K _u[2] =0.0f, _u[3] = 0.0f; // motor ouput
                                   [01;31m[K^[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:61:18:[m[K [01;36m[Knote: [m[Kprevious declaration â€˜[01m[Kfloat QuadDynamicModel::_u [0][m[Kâ€™
     float _u[0] =[01;36m[K0.0f[m[K, _u[1] =0.0f, _u[2] =0.0f, _u[3] = 0.0f; // motor ouput
                  [01;36m[K^~~~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:61:48:[m[K [01;31m[Kerror: [m[Kredeclaration of â€˜[01m[Kfloat QuadDynamicModel::_u [2][m[Kâ€™
     float _u[0] =0.0f, _u[1] =0.0f, _u[2] =0.0f[01;31m[K,[m[K _u[3] = 0.0f; // motor ouput
                                                [01;31m[K^[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:61:18:[m[K [01;36m[Knote: [m[Kprevious declaration â€˜[01m[Kfloat QuadDynamicModel::_u [0][m[Kâ€™
     float _u[0] =[01;36m[K0.0f[m[K, _u[1] =0.0f, _u[2] =0.0f, _u[3] = 0.0f; // motor ouput
                  [01;36m[K^~~~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:61:58:[m[K [01;31m[Kerror: [m[Kredeclaration of â€˜[01m[Kfloat QuadDynamicModel::_u [3][m[Kâ€™
     float _u[0] =0.0f, _u[1] =0.0f, _u[2] =0.0f, _u[3] = [01;31m[K0.0f[m[K; // motor ouput
                                                          [01;31m[K^~~~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:61:18:[m[K [01;36m[Knote: [m[Kprevious declaration â€˜[01m[Kfloat QuadDynamicModel::_u [0][m[Kâ€™
     float _u[0] =[01;36m[K0.0f[m[K, _u[1] =0.0f, _u[2] =0.0f, _u[3] = 0.0f; // motor ouput
                  [01;36m[K^~~~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:62:40:[m[K [01;31m[Kerror: [m[Kredeclaration of â€˜[01m[Kfloat QuadDynamicModel::_omega [1][m[Kâ€™
  float _omega[0] =0.0f, _omega[1] =0.0f[01;31m[K,[m[K _omega[2] =0.0f, _omega[3] = 0.0f; // angular velocity of motor
                                        [01;31m[K^[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:62:19:[m[K [01;36m[Knote: [m[Kprevious declaration â€˜[01m[Kfloat QuadDynamicModel::_omega [0][m[Kâ€™
  float _omega[0] =[01;36m[K0.0f[m[K, _omega[1] =0.0f, _omega[2] =0.0f, _omega[3] = 0.0f; // angular velocity of motor
                   [01;36m[K^~~~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:62:57:[m[K [01;31m[Kerror: [m[Kredeclaration of â€˜[01m[Kfloat QuadDynamicModel::_omega [2][m[Kâ€™
  float _omega[0] =0.0f, _omega[1] =0.0f, _omega[2] =0.0f[01;31m[K,[m[K _omega[3] = 0.0f; // angular velocity of motor
                                                         [01;31m[K^[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:62:19:[m[K [01;36m[Knote: [m[Kprevious declaration â€˜[01m[Kfloat QuadDynamicModel::_omega [0][m[Kâ€™
  float _omega[0] =[01;36m[K0.0f[m[K, _omega[1] =0.0f, _omega[2] =0.0f, _omega[3] = 0.0f; // angular velocity of motor
                   [01;36m[K^~~~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:62:71:[m[K [01;31m[Kerror: [m[Kredeclaration of â€˜[01m[Kfloat QuadDynamicModel::_omega [3][m[Kâ€™
  float _omega[0] =0.0f, _omega[1] =0.0f, _omega[2] =0.0f, _omega[3] = [01;31m[K0.0f[m[K; // angular velocity of motor
                                                                       [01;31m[K^~~~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:62:19:[m[K [01;36m[Knote: [m[Kprevious declaration â€˜[01m[Kfloat QuadDynamicModel::_omega [0][m[Kâ€™
  float _omega[0] =[01;36m[K0.0f[m[K, _omega[1] =0.0f, _omega[2] =0.0f, _omega[3] = 0.0f; // angular velocity of motor
                   [01;36m[K^~~~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:64:14:[m[K [01;31m[Kerror: [m[Kinvalid use of non-static data member â€˜[01m[KQuadDynamicModel::NB[m[Kâ€™
  Vector3f _d[[01;31m[KNB[m[K] {}; // direction of j-th rotor in body frame
              [01;31m[K^~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:37:20:[m[K [01;36m[Knote: [m[Kdeclared here
     const int NB = [01;36m[K4[m[K; // number of blade
                    [01;36m[K^[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:65:5:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[K_d[m[Kâ€™ does not name a type
     [01;31m[K_d[m[K[0] = Vector3f(0.0f, 0.0f, 1.0f);
     [01;31m[K^~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:66:5:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[K_d[m[Kâ€™ does not name a type
     [01;31m[K_d[m[K[1] = _d[0];
     [01;31m[K^~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:67:5:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[K_d[m[Kâ€™ does not name a type
     [01;31m[K_d[m[K[2] = _d[0];
     [01;31m[K^~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:68:5:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[K_d[m[Kâ€™ does not name a type
     [01;31m[K_d[m[K[3] = _d[0];
     [01;31m[K^~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:71:16:[m[K [01;31m[Kerror: [m[Kinvalid use of non-static data member â€˜[01m[KQuadDynamicModel::NB[m[Kâ€™
     float _C_T[[01;31m[KNB[m[K];
                [01;31m[K^~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:37:20:[m[K [01;36m[Knote: [m[Kdeclared here
     const int NB = [01;36m[K4[m[K; // number of blade
                    [01;36m[K^[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:72:16:[m[K [01;31m[Kerror: [m[Kinvalid use of non-static data member â€˜[01m[KQuadDynamicModel::NB[m[Kâ€™
     float _C_Q[[01;31m[KNB[m[K];
                [01;31m[K^~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:37:20:[m[K [01;36m[Knote: [m[Kdeclared here
     const int NB = [01;36m[K4[m[K; // number of blade
                    [01;36m[K^[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:77:24:[m[K [01;31m[Kerror: [m[Kinvalid use of non-static data member â€˜[01m[KQuadDynamicModel::NB[m[Kâ€™
  Eigen::Vector3f    _T[[01;31m[KNB[m[K] {};           // thrust force generated in body frame [N]
                        [01;31m[K^~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:37:20:[m[K [01;36m[Knote: [m[Kdeclared here
     const int NB = [01;36m[K4[m[K; // number of blade
                    [01;36m[K^[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:78:24:[m[K [01;31m[Kerror: [m[Kinvalid use of non-static data member â€˜[01m[KQuadDynamicModel::NB[m[Kâ€™
  Eigen::Vector3f    _Q[[01;31m[KNB[m[K] {};           // torque generated in body frame [N]
                        [01;31m[K^~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:37:20:[m[K [01;36m[Knote: [m[Kdeclared here
     const int NB = [01;36m[K4[m[K; // number of blade
                    [01;36m[K^[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:48:21:[m[K [01;31m[Kerror: [m[Karray must be initialized with a brace-enclosed initializer
     Vector3f r[0] = [01;31m[KVector3f(0.0f, 0.0f, 0.0f)[m[K;// _TODO_
                     [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:49:21:[m[K [01;31m[Kerror: [m[Karray must be initialized with a brace-enclosed initializer
     Vector3f r[1] = [01;31m[KVector3f(0.0f, 0.0f, 0.0f)[m[K;
                     [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:50:21:[m[K [01;31m[Kerror: [m[Karray must be initialized with a brace-enclosed initializer
     Vector3f r[2] = [01;31m[KVector3f(0.0f, 0.0f, 0.0f)[m[K;
                     [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:51:21:[m[K [01;31m[Kerror: [m[Karray must be initialized with a brace-enclosed initializer
     Vector3f r[3] = [01;31m[KVector3f(0.0f, 0.0f, 0.0f)[m[K;
                     [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:57:26:[m[K [01;31m[Kerror: [m[Kmissing template arguments before â€˜[01m[K([m[Kâ€™ token
  Vector3f _q = Quaternion[01;31m[K([m[K1.0f, 0.0f, 0.0f, 0.0f);  // quaternion
                          [01;31m[K^[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:59:39:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KEigen::Matrix<float, 3, 1>::Matrix(float&, Eigen::Vector3f&, float&)[m[Kâ€™
  Vector3f _Omega = Vector3f(_p, _q, _r[01;31m[K)[m[K; // angular velocity in inertial frame
                                       [01;31m[K^[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:458[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Eigen:1[m[K,
                 from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:1[m[K,
                 from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/digital_twin.cpp:3[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:387:14:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class OtherDerived> Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::RotationBase<OtherDerived, ColsAtCompileTime>&)[m[Kâ€™
     explicit [01;36m[KMatrix[m[K(const RotationBase<OtherDerived,ColsAtCompileTime>& r);
              [01;36m[K^~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:387:14:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
In file included from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/digital_twin.cpp:3[m[K:
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:59:39:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kconst Eigen::RotationBase<OtherDerived, 1>[m[Kâ€™ and â€˜[01m[Kfloat[m[Kâ€™
  Vector3f _Omega = Vector3f(_p, _q, _r[01;36m[K)[m[K; // angular velocity in inertial frame
                                       [01;36m[K^[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:458[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Eigen:1[m[K,
                 from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:1[m[K,
                 from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/digital_twin.cpp:3[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:376:25:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class OtherDerived> Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&)[m[Kâ€™
     EIGEN_STRONG_INLINE [01;36m[KMatrix[m[K(const EigenBase<OtherDerived> &other)
                         [01;36m[K^~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:376:25:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
In file included from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/digital_twin.cpp:3[m[K:
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:59:39:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kconst Eigen::EigenBase<Derived>[m[Kâ€™ and â€˜[01m[Kfloat[m[Kâ€™
  Vector3f _Omega = Vector3f(_p, _q, _r[01;36m[K)[m[K; // angular velocity in inertial frame
                                       [01;36m[K^[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:458[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Eigen:1[m[K,
                 from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:1[m[K,
                 from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/digital_twin.cpp:3[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:368:25:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&) [with _Scalar = float; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1][m[Kâ€™
     EIGEN_STRONG_INLINE [01;36m[KMatrix[m[K(const Matrix& other) : Base(other)
                         [01;36m[K^~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:368:25:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 3 provided
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:355:25:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Scalar&, const Scalar&, const Scalar&, const Scalar&) [with _Scalar = float; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1; Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Scalar = float][m[Kâ€™
     EIGEN_STRONG_INLINE [01;36m[KMatrix[m[K(const Scalar& x, const Scalar& y, const Scalar& z, const Scalar& w)
                         [01;36m[K^~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:355:25:[m[K [01;36m[Knote: [m[K  candidate expects 4 arguments, 3 provided
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:345:25:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Scalar&, const Scalar&, const Scalar&) [with _Scalar = float; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1; Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Scalar = float][m[Kâ€™
     EIGEN_STRONG_INLINE [01;36m[KMatrix[m[K(const Scalar& x, const Scalar& y, const Scalar& z)
                         [01;36m[K^~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:345:25:[m[K [01;36m[Knote: [m[K  no known conversion for argument 2 from â€˜[01m[KEigen::Vector3f[m[Kâ€™ {aka â€˜[01m[KEigen::Matrix<float, 3, 1>[m[Kâ€™} to â€˜[01m[Kconst Scalar&[m[Kâ€™ {aka â€˜[01m[Kconst float&[m[Kâ€™}
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:299:25:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T0, class T1> Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T0&, const T1&)[m[Kâ€™
     EIGEN_STRONG_INLINE [01;36m[KMatrix[m[K(const T0& x, const T1& y)
                         [01;36m[K^~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:299:25:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
In file included from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/digital_twin.cpp:3[m[K:
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:59:39:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 3 provided
  Vector3f _Omega = Vector3f(_p, _q, _r[01;36m[K)[m[K; // angular velocity in inertial frame
                                       [01;36m[K^[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:458[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Eigen:1[m[K,
                 from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:1[m[K,
                 from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/digital_twin.cpp:3[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:291:34:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&)[m[Kâ€™
     EIGEN_STRONG_INLINE explicit [01;36m[KMatrix[m[K(const T& x)
                                  [01;36m[K^~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:291:34:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
In file included from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/digital_twin.cpp:3[m[K:
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:59:39:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 3 provided
  Vector3f _Omega = Vector3f(_p, _q, _r[01;36m[K)[m[K; // angular velocity in inertial frame
                                       [01;36m[K^[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:458[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Eigen:1[m[K,
                 from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:1[m[K,
                 from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/digital_twin.cpp:3[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:273:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = float; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1][m[Kâ€™
     [01;36m[KMatrix[m[K(Matrix&& other) EIGEN_NOEXCEPT_IF(std::is_nothrow_move_constructible<Scalar>::value)
     [01;36m[K^~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:273:5:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 3 provided
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:267:14:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::internal::constructor_without_unaligned_array_assert) [with _Scalar = float; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1][m[Kâ€™
     explicit [01;36m[KMatrix[m[K(internal::constructor_without_unaligned_array_assert)
              [01;36m[K^~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:267:14:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 3 provided
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:259:25:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix() [with _Scalar = float; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1][m[Kâ€™
     EIGEN_STRONG_INLINE [01;36m[KMatrix[m[K() : Base()
                         [01;36m[K^~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:259:25:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 3 provided
In file included from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/digital_twin.cpp:3[m[K:
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:61:18:[m[K [01;31m[Kerror: [m[Karray must be initialized with a brace-enclosed initializer
     float _u[0] =[01;31m[K0.0f[m[K, _u[1] =0.0f, _u[2] =0.0f, _u[3] = 0.0f; // motor ouput
                  [01;31m[K^~~~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:61:31:[m[K [01;31m[Kerror: [m[Karray must be initialized with a brace-enclosed initializer
     float _u[0] =0.0f, _u[1] =[01;31m[K0.0f[m[K, _u[2] =0.0f, _u[3] = 0.0f; // motor ouput
                               [01;31m[K^~~~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:61:44:[m[K [01;31m[Kerror: [m[Karray must be initialized with a brace-enclosed initializer
     float _u[0] =0.0f, _u[1] =0.0f, _u[2] =[01;31m[K0.0f[m[K, _u[3] = 0.0f; // motor ouput
                                            [01;31m[K^~~~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:61:58:[m[K [01;31m[Kerror: [m[Karray must be initialized with a brace-enclosed initializer
     float _u[0] =0.0f, _u[1] =0.0f, _u[2] =0.0f, _u[3] = [01;31m[K0.0f[m[K; // motor ouput
                                                          [01;31m[K^~~~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:62:19:[m[K [01;31m[Kerror: [m[Karray must be initialized with a brace-enclosed initializer
  float _omega[0] =[01;31m[K0.0f[m[K, _omega[1] =0.0f, _omega[2] =0.0f, _omega[3] = 0.0f; // angular velocity of motor
                   [01;31m[K^~~~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:62:36:[m[K [01;31m[Kerror: [m[Karray must be initialized with a brace-enclosed initializer
  float _omega[0] =0.0f, _omega[1] =[01;31m[K0.0f[m[K, _omega[2] =0.0f, _omega[3] = 0.0f; // angular velocity of motor
                                    [01;31m[K^~~~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:62:53:[m[K [01;31m[Kerror: [m[Karray must be initialized with a brace-enclosed initializer
  float _omega[0] =0.0f, _omega[1] =0.0f, _omega[2] =[01;31m[K0.0f[m[K, _omega[3] = 0.0f; // angular velocity of motor
                                                     [01;31m[K^~~~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:62:71:[m[K [01;31m[Kerror: [m[Karray must be initialized with a brace-enclosed initializer
  float _omega[0] =0.0f, _omega[1] =0.0f, _omega[2] =0.0f, _omega[3] = [01;31m[K0.0f[m[K; // angular velocity of motor
                                                                       [01;31m[K^~~~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:80:43:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KEigen::Matrix<float, 3, 1>::Matrix(float&, Eigen::Vector3f&, float&)[m[Kâ€™
  Vector3f _Omega_dot = Vector3f(_p, _q, _r[01;31m[K)[m[K; // angular acceleration in inertial frame
                                           [01;31m[K^[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:458[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Eigen:1[m[K,
                 from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:1[m[K,
                 from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/digital_twin.cpp:3[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:387:14:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class OtherDerived> Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::RotationBase<OtherDerived, ColsAtCompileTime>&)[m[Kâ€™
     explicit [01;36m[KMatrix[m[K(const RotationBase<OtherDerived,ColsAtCompileTime>& r);
              [01;36m[K^~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:387:14:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
In file included from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/digital_twin.cpp:3[m[K:
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:80:43:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kconst Eigen::RotationBase<OtherDerived, 1>[m[Kâ€™ and â€˜[01m[Kfloat[m[Kâ€™
  Vector3f _Omega_dot = Vector3f(_p, _q, _r[01;36m[K)[m[K; // angular acceleration in inertial frame
                                           [01;36m[K^[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:458[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Eigen:1[m[K,
                 from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:1[m[K,
                 from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/digital_twin.cpp:3[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:376:25:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class OtherDerived> Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::EigenBase<OtherDerived>&)[m[Kâ€™
     EIGEN_STRONG_INLINE [01;36m[KMatrix[m[K(const EigenBase<OtherDerived> &other)
                         [01;36m[K^~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:376:25:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
In file included from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/digital_twin.cpp:3[m[K:
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:80:43:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kconst Eigen::EigenBase<Derived>[m[Kâ€™ and â€˜[01m[Kfloat[m[Kâ€™
  Vector3f _Omega_dot = Vector3f(_p, _q, _r[01;36m[K)[m[K; // angular acceleration in inertial frame
                                           [01;36m[K^[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:458[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Eigen:1[m[K,
                 from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:1[m[K,
                 from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/digital_twin.cpp:3[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:368:25:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&) [with _Scalar = float; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1][m[Kâ€™
     EIGEN_STRONG_INLINE [01;36m[KMatrix[m[K(const Matrix& other) : Base(other)
                         [01;36m[K^~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:368:25:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 3 provided
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:355:25:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Scalar&, const Scalar&, const Scalar&, const Scalar&) [with _Scalar = float; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1; Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Scalar = float][m[Kâ€™
     EIGEN_STRONG_INLINE [01;36m[KMatrix[m[K(const Scalar& x, const Scalar& y, const Scalar& z, const Scalar& w)
                         [01;36m[K^~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:355:25:[m[K [01;36m[Knote: [m[K  candidate expects 4 arguments, 3 provided
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:345:25:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Scalar&, const Scalar&, const Scalar&) [with _Scalar = float; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1; Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Scalar = float][m[Kâ€™
     EIGEN_STRONG_INLINE [01;36m[KMatrix[m[K(const Scalar& x, const Scalar& y, const Scalar& z)
                         [01;36m[K^~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:345:25:[m[K [01;36m[Knote: [m[K  no known conversion for argument 2 from â€˜[01m[KEigen::Vector3f[m[Kâ€™ {aka â€˜[01m[KEigen::Matrix<float, 3, 1>[m[Kâ€™} to â€˜[01m[Kconst Scalar&[m[Kâ€™ {aka â€˜[01m[Kconst float&[m[Kâ€™}
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:299:25:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T0, class T1> Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T0&, const T1&)[m[Kâ€™
     EIGEN_STRONG_INLINE [01;36m[KMatrix[m[K(const T0& x, const T1& y)
                         [01;36m[K^~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:299:25:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
In file included from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/digital_twin.cpp:3[m[K:
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:80:43:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 3 provided
  Vector3f _Omega_dot = Vector3f(_p, _q, _r[01;36m[K)[m[K; // angular acceleration in inertial frame
                                           [01;36m[K^[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:458[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Eigen:1[m[K,
                 from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:1[m[K,
                 from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/digital_twin.cpp:3[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:291:34:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class T> Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const T&)[m[Kâ€™
     EIGEN_STRONG_INLINE explicit [01;36m[KMatrix[m[K(const T& x)
                                  [01;36m[K^~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:291:34:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
In file included from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/digital_twin.cpp:3[m[K:
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:80:43:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 3 provided
  Vector3f _Omega_dot = Vector3f(_p, _q, _r[01;36m[K)[m[K; // angular acceleration in inertial frame
                                           [01;36m[K^[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:458[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Eigen:1[m[K,
                 from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:1[m[K,
                 from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/digital_twin.cpp:3[m[K:
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:273:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>&&) [with _Scalar = float; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1][m[Kâ€™
     [01;36m[KMatrix[m[K(Matrix&& other) EIGEN_NOEXCEPT_IF(std::is_nothrow_move_constructible<Scalar>::value)
     [01;36m[K^~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:273:5:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 3 provided
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:267:14:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(Eigen::internal::constructor_without_unaligned_array_assert) [with _Scalar = float; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1][m[Kâ€™
     explicit [01;36m[KMatrix[m[K(internal::constructor_without_unaligned_array_assert)
              [01;36m[K^~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:267:14:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 3 provided
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:259:25:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix() [with _Scalar = float; int _Rows = 3; int _Cols = 1; int _Options = 0; int _MaxRows = 3; int _MaxCols = 1][m[Kâ€™
     EIGEN_STRONG_INLINE [01;36m[KMatrix[m[K() : Base()
                         [01;36m[K^~~~~~[m[K
[01m[K/usr/include/eigen3/Eigen/src/Core/Matrix.h:259:25:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 3 provided
In file included from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/digital_twin.cpp:3[m[K:
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:[m[K In member function â€˜[01m[Kvoid QuadDynamicModel::updateForceandMoment()[m[Kâ€™:
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:148:9:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[K_D[m[Kâ€™ was not declared in this scope
         [01;31m[K_D[m[K = - _C_D * std::abs(_relative_velocity) * _relative_velocity;
         [01;31m[K^~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:148:9:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[K_v[m[Kâ€™
         [01;36m[K_D[m[K = - _C_D * std::abs(_relative_velocity) * _relative_velocity;
         [01;36m[K^~[m[K
         [32m[K_v[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:148:50:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kabs(Eigen::Vector3f&)[m[Kâ€™
         _D = - _C_D * std::abs(_relative_velocity[01;31m[K)[m[K * _relative_velocity;
                                                  [01;31m[K^[m[K
In file included from [01m[K/usr/include/c++/8/cstdlib:77[m[K,
                 from [01m[K/usr/include/boost/config/platform/linux.hpp:15[m[K,
                 from [01m[K/usr/include/boost/config.hpp:57[m[K,
                 from [01m[K/usr/include/boost/type_traits/remove_reference.hpp:12[m[K,
                 from [01m[K/opt/ros/noetic/include/ros/service_traits.h:31[m[K,
                 from [01m[K/home/roku/workspace_jun/dt_test/devel/.private/dt_test_pkg/include/dt_test_pkg/ControlEval.h:8[m[K,
                 from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/digital_twin.cpp:2[m[K:
[01m[K/usr/include/c++/8/bits/std_abs.h:56:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Klong int std::abs(long int)[m[Kâ€™
   [01;36m[Kabs[m[K(long __i) { return __builtin_labs(__i); }
   [01;36m[K^~~[m[K
[01m[K/usr/include/c++/8/bits/std_abs.h:56:3:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[KEigen::Vector3f[m[Kâ€™ {aka â€˜[01m[KEigen::Matrix<float, 3, 1>[m[Kâ€™} to â€˜[01m[Klong int[m[Kâ€™
[01m[K/usr/include/c++/8/bits/std_abs.h:61:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Klong long int std::abs(long long int)[m[Kâ€™
   [01;36m[Kabs[m[K(long long __x) { return __builtin_llabs (__x); }
   [01;36m[K^~~[m[K
[01m[K/usr/include/c++/8/bits/std_abs.h:61:3:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[KEigen::Vector3f[m[Kâ€™ {aka â€˜[01m[KEigen::Matrix<float, 3, 1>[m[Kâ€™} to â€˜[01m[Klong long int[m[Kâ€™
[01m[K/usr/include/c++/8/bits/std_abs.h:70:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kconstexpr double std::abs(double)[m[Kâ€™
   [01;36m[Kabs[m[K(double __x)
   [01;36m[K^~~[m[K
[01m[K/usr/include/c++/8/bits/std_abs.h:70:3:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[KEigen::Vector3f[m[Kâ€™ {aka â€˜[01m[KEigen::Matrix<float, 3, 1>[m[Kâ€™} to â€˜[01m[Kdouble[m[Kâ€™
[01m[K/usr/include/c++/8/bits/std_abs.h:74:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kconstexpr float std::abs(float)[m[Kâ€™
   [01;36m[Kabs[m[K(float __x)
   [01;36m[K^~~[m[K
[01m[K/usr/include/c++/8/bits/std_abs.h:74:3:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[KEigen::Vector3f[m[Kâ€™ {aka â€˜[01m[KEigen::Matrix<float, 3, 1>[m[Kâ€™} to â€˜[01m[Kfloat[m[Kâ€™
[01m[K/usr/include/c++/8/bits/std_abs.h:78:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kconstexpr long double std::abs(long double)[m[Kâ€™
   [01;36m[Kabs[m[K(long double __x)
   [01;36m[K^~~[m[K
[01m[K/usr/include/c++/8/bits/std_abs.h:78:3:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[KEigen::Vector3f[m[Kâ€™ {aka â€˜[01m[KEigen::Matrix<float, 3, 1>[m[Kâ€™} to â€˜[01m[Klong double[m[Kâ€™
[01m[K/usr/include/c++/8/bits/std_abs.h:84:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kconstexpr __int128 std::abs(__int128)[m[Kâ€™
   [01;36m[Kabs[m[K(__GLIBCXX_TYPE_INT_N_0 __x) { return __x >= 0 ? __x : -__x; }
   [01;36m[K^~~[m[K
[01m[K/usr/include/c++/8/bits/std_abs.h:84:3:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[KEigen::Vector3f[m[Kâ€™ {aka â€˜[01m[KEigen::Matrix<float, 3, 1>[m[Kâ€™} to â€˜[01m[K__int128[m[Kâ€™
[01m[K/usr/include/c++/8/bits/std_abs.h:102:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kconstexpr __float128 std::abs(__float128)[m[Kâ€™
   [01;36m[Kabs[m[K(__float128 __x)
   [01;36m[K^~~[m[K
[01m[K/usr/include/c++/8/bits/std_abs.h:102:3:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[KEigen::Vector3f[m[Kâ€™ {aka â€˜[01m[KEigen::Matrix<float, 3, 1>[m[Kâ€™} to â€˜[01m[K__float128[m[Kâ€™
In file included from [01m[K/usr/include/boost/config/no_tr1/complex.hpp:21[m[K,
                 from [01m[K/usr/include/boost/math/policies/error_handling.hpp:17[m[K,
                 from [01m[K/usr/include/boost/math/special_functions/round.hpp:14[m[K,
                 from [01m[K/opt/ros/noetic/include/ros/time.h:58[m[K,
                 from [01m[K/opt/ros/noetic/include/ros/serialization.h:34[m[K,
                 from [01m[K/home/roku/workspace_jun/dt_test/devel/.private/dt_test_pkg/include/dt_test_pkg/ControlEvalRequest.h:14[m[K,
                 from [01m[K/home/roku/workspace_jun/dt_test/devel/.private/dt_test_pkg/include/dt_test_pkg/ControlEval.h:11[m[K,
                 from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/digital_twin.cpp:2[m[K:
[01m[K/usr/include/c++/8/complex:618:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> _Tp std::abs(const std::complex<_Tp>&)[m[Kâ€™
     [01;36m[Kabs[m[K(const complex<_Tp>& __z) { return __complex_abs(__z.__rep()); }
     [01;36m[K^~~[m[K
[01m[K/usr/include/c++/8/complex:618:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
In file included from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/digital_twin.cpp:3[m[K:
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:148:50:[m[K [01;36m[Knote: [m[K  â€˜[01m[KEigen::Vector3f[m[Kâ€™ {aka â€˜[01m[KEigen::Matrix<float, 3, 1>[m[Kâ€™} is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
         _D = - _C_D * std::abs(_relative_velocity[01;36m[K)[m[K * _relative_velocity;
                                                  [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/8/cstdlib:75[m[K,
                 from [01m[K/usr/include/boost/config/platform/linux.hpp:15[m[K,
                 from [01m[K/usr/include/boost/config.hpp:57[m[K,
                 from [01m[K/usr/include/boost/type_traits/remove_reference.hpp:12[m[K,
                 from [01m[K/opt/ros/noetic/include/ros/service_traits.h:31[m[K,
                 from [01m[K/home/roku/workspace_jun/dt_test/devel/.private/dt_test_pkg/include/dt_test_pkg/ControlEval.h:8[m[K,
                 from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/digital_twin.cpp:2[m[K:
[01m[K/usr/include/stdlib.h:840:12:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kint abs(int)[m[Kâ€™
 extern int [01;36m[Kabs[m[K (int __x) __THROW __attribute__ ((__const__)) __wur;
            [01;36m[K^~~[m[K
[01m[K/usr/include/stdlib.h:840:12:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[KEigen::Vector3f[m[Kâ€™ {aka â€˜[01m[KEigen::Matrix<float, 3, 1>[m[Kâ€™} to â€˜[01m[Kint[m[Kâ€™
In file included from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/digital_twin.cpp:3[m[K:
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:152:14:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Ki[m[Kâ€™ was not declared in this scope
         for ([01;31m[Ki[m[K=0; i<3; i++){
              [01;31m[K^[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:153:13:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[K_T[m[Kâ€™ was not declared in this scope
             [01;31m[K_T[m[K[i] = _C_T * rho * M_PI * pow(R, 4) * pow(_omega[i],2);
             [01;31m[K^~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:153:13:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[K_v[m[Kâ€™
             [01;36m[K_T[m[K[i] = _C_T * rho * M_PI * pow(R, 4) * pow(_omega[i],2);
             [01;36m[K^~[m[K
             [32m[K_v[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:153:21:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[K_C_T[m[Kâ€™ was not declared in this scope
             _T[i] = [01;31m[K_C_T[m[K * rho * M_PI * pow(R, 4) * pow(_omega[i],2);
                     [01;31m[K^~~~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:153:21:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[K_C_D[m[Kâ€™
             _T[i] = [01;36m[K_C_T[m[K * rho * M_PI * pow(R, 4) * pow(_omega[i],2);
                     [01;36m[K^~~~[m[K
                     [32m[K_C_D[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:153:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Krho[m[Kâ€™ was not declared in this scope
             _T[i] = _C_T * [01;31m[Krho[m[K * M_PI * pow(R, 4) * pow(_omega[i],2);
                            [01;31m[K^~~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:155:23:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[K_T[m[Kâ€™ was not declared in this scope
         _sum_thrust = [01;31m[K_T[m[K[0] * _d[0] + _T[1] * _d[1] + _T[2] * _d[2] + _T[3] * _d[3];
                       [01;31m[K^~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:155:23:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[K_v[m[Kâ€™
         _sum_thrust = [01;36m[K_T[m[K[0] * _d[0] + _T[1] * _d[1] + _T[2] * _d[2] + _T[3] * _d[3];
                       [01;36m[K^~[m[K
                       [32m[K_v[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:155:31:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[K_d[m[Kâ€™ was not declared in this scope
         _sum_thrust = _T[0] * [01;31m[K_d[m[K[0] + _T[1] * _d[1] + _T[2] * _d[2] + _T[3] * _d[3];
                               [01;31m[K^~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:155:31:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[K_v[m[Kâ€™
         _sum_thrust = _T[0] * [01;36m[K_d[m[K[0] + _T[1] * _d[1] + _T[2] * _d[2] + _T[3] * _d[3];
                               [01;36m[K^~[m[K
                               [32m[K_v[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:161:14:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Ki[m[Kâ€™ was not declared in this scope
         for ([01;31m[Ki[m[K=0; i<3; i++){
              [01;31m[K^[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:163:70:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[K_Q[m[Kâ€™ was not declared in this scope
             _reaction_torque = _reaction_torque + pow((-1), (i+1)) * [01;31m[K_Q[m[K[i] * _d[i];
                                                                      [01;31m[K^~[m[K
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:163:70:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[K_v[m[Kâ€™
             _reaction_torque = _reaction_torque + pow((-1), (i+1)) * [01;36m[K_Q[m[K[i] * _d[i];
                                                                      [01;36m[K^~[m[K
                                                                      [32m[K_v[m[K
In file included from [01m[K/usr/include/eigen3/Eigen/Core:366[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Dense:1[m[K,
                 from [01m[K/usr/include/eigen3/Eigen/Eigen:1[m[K,
                 from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:1[m[K,
                 from [01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/digital_twin.cpp:3[m[K:
/usr/include/eigen3/Eigen/src/Geometry/OrthoMethods.h: In instantiation of â€˜[01m[Ktypename Eigen::MatrixBase<Derived>::cross_product_return_type<OtherDerived>::type Eigen::MatrixBase<Derived>::cross(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::Product<Eigen::DiagonalMatrix<float, -1>, Eigen::Matrix<float, 3, 1>, 1>; Derived = Eigen::Matrix<float, 3, 1>; typename Eigen::MatrixBase<Derived>::cross_product_return_type<OtherDerived>::type = Eigen::Matrix<float, 3, 1>][m[Kâ€™:
[01m[K/home/roku/workspace_jun/dt_test/src/dt_test_pkg/src/dynamic_model_quad.cpp:173:66:[m[K   required from here
[01m[K/usr/include/eigen3/Eigen/src/Core/util/StaticAssert.h:155:51:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: THIS_METHOD_IS_ONLY_FOR_VECTORS_OF_A_SPECIFIC_SIZE
   EIGEN_STATIC_ASSERT(TYPE::IsVectorAtCompileTime && TYPE::SizeAtCompileTime==SIZE, \
[01m[K/usr/include/eigen3/Eigen/src/Core/util/StaticAssert.h:33:54:[m[K [01;36m[Knote: [m[Kin definition of macro â€˜[01m[KEIGEN_STATIC_ASSERT[m[Kâ€™
     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert([01;36m[KX[m[K,#MSG);
                                                      [01;36m[K^[m[K
[01m[K/usr/include/eigen3/Eigen/src/Geometry/OrthoMethods.h:37:3:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KEIGEN_STATIC_ASSERT_VECTOR_SPECIFIC_SIZE[m[Kâ€™
   [01;36m[KEIGEN_STATIC_ASSERT_VECTOR_SPECIFIC_SIZE[m[K(OtherDerived,3)
   [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
make[2]: *** [CMakeFiles/digital_twin.dir/build.make:63: CMakeFiles/digital_twin.dir/src/digital_twin.cpp.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:1121: CMakeFiles/digital_twin.dir/all] Error 2
make: *** [Makefile:141: all] Error 2
